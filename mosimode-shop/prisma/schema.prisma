// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  name        String?
  username    String   @unique
  password    String
  email       String?
  phoneNumber String?
  cart        Cart?    @relation(fields: [cartId], references: [id])
  cartId      String?  @unique
  orders      Order[]
  createdAt   DateTime @default(now())
}

model AnonymousUser {
  id          String   @id @default(uuid())
  phoneNumber String?
  cart        Cart?    @relation(fields: [cartId], references: [id])
  cartId      String?  @unique
  createdAt   DateTime @default(now())
}

model Product {
  id        Int              @id @default(autoincrement())
  title     String
  image     String
  price     Float
  rate      Float            @default(0.0)
  rateCount Int              @default(0)
  options   ProductOptions[]
  category  Category[]       @relation("ProductsCategories")
  tags      Tags[]           @relation("ProductsTags")
  //carts     Cart[]           @relation("CartProducts")
  cartItems CartItem[]
  createdAt DateTime         @default(now())
  OrderItem OrderItem[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[] @relation("ProductsCategories")
}

model Tags {
  id       Int       @id @default(autoincrement())
  name     String?
  products Product[] @relation("ProductsTags")
}

model ProductOptions {
  id        Int     @id @default(autoincrement())
  name      String?
  value     String?
  Product   Product @relation(fields: [ProductId], references: [id])
  ProductId Int
}

model Cart {
  id            String         @id @default(uuid())
  cartItems     CartItem[]
  user          User?
  anonymousUser AnonymousUser?
  createdAt     DateTime       @default(now())
}

model CartItem {
  id        Int      @id @default(autoincrement())
  Product   Product? @relation(fields: [productId], references: [id])
  productId Int?
  Cart      Cart?    @relation(fields: [cartId], references: [id])
  cartId    String?
  quantity  Int      @default(1)
}

model Order {
  id             String         @id @default(uuid())
  totalAmount    Float
  user           User?          @relation(fields: [userId], references: [id])
  userId         String?
  items          OrderItem[]
  name           String
  phonenumber    String
  telephone      String?
  state          String
  city           String
  address        String
  postalcode     String?
  message        String?
  deliveryMethod DeliveryMethod
  paymentStatus  PaymentStatus  @default(PENDING)
  createdAt      DateTime       @default(now())
}

enum DeliveryMethod {
  POST
  RESERVED
}

enum PaymentStatus {
  PENDING
  PAID
  PREPAID
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  quantity  Int
  price     Float
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  Order     Order?  @relation(fields: [orderId], references: [id])
  orderId   String?
}
